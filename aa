# -*- coding: utf-8 -*-
"""二値化→分割.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1miXq8KLXvZvsN6eE7gsZEjrWmAKb4a_G
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
from pathlib import Path
import pandas as pd
from matplotlib import pyplot as plt

"""「補正済みの」画像を取り込み→二値化"""

###画像の読み込み
img = cv2.imread('test_resize.png', 0)
threshold = 125 ###閾値

# 二値化(thresholdで指定した値を超えた画素を255にする。)
ret, img_thresh = cv2.threshold(img, threshold, 255, cv2.THRESH_BINARY)

### 画像の切り取り
t_img = img_thresh[1620: 2035, 950:1790]

### 
t_img2 = 255 - t_img
cv2.imwrite('black_white_test.png',t_img2)

"""分割+それぞれ画像保存"""

rows = 5  # 行数
cols = 3  # 列数

chunks = []
for row_img in np.array_split(t_img2, rows, axis=0):
    for chunk in np.array_split(row_img, cols, axis=1):
        chunks.append(chunk)
print(len(chunks))

# 保存する。
output_dir = Path("output")
output_dir.mkdir(exist_ok=True)
for i, chunk in enumerate(chunks):
    save_path = output_dir / f"t_chunk_{i:02d}.png"
    cv2.imwrite(str(save_path), chunk)

"""結果を入れる箱"""

for rowbox in range(rows):
  rownum = rowbox + 1
  rownum_s = str(rownum)
  print("ans_row" + str(rownum))
  ans_row_rowbox = []    ###ここ何とかしたい

print(ans_row_1)

"""１つごとの判定"""

result = [] #ボックス初期化

for num in range(15): ##15個のチャンクがある場合
  num_s = f'{num+1:02d}' ##00が原点になっているのを+1で解消
  num_g = cv2.imread(f'/content/output/t_chunk_{num:02d}.png')
  if np.mean(num_g) > 5: ##thresholdが5の場合
    quo = num // 3 + 1  ##商＋１→行の判定
    mod = num % 3 + 1 ##余り+1→列の判定
    f'result{quo}'.append(mod)
    result.append(mod)
print(result)



"""↓https://qiita.com/R_TES_/items/10142d3c3397406e5e2b"""
